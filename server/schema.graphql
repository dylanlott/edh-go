scalar Time

type Message {
  id: String!
  user: String!
  createdAt: Time!
  text: String!
}

type Mutation {
  postMessage(user: String!, text: String!): Message
  updateBoardState(input: InputBoardState!): BoardState
  createGame(input: InputGame!): Game!
  updateGame(input: InputGame!): Game!
  createDeck(input: InputDeck): Deck
  signup(input: InputSignup): User!
}

type Query {
  messages: [Message!]!
  users: [String!]!
  games: [Game!]!
  boardstate(gameID: String!): [BoardState!]!
  decks(userID: String!): [Deck!]
  cards(cardID: String, name: String): [Card!]
}

type Subscription {
  messagePosted(user: String!): Message!
  userJoined(user: String!): String!
  boardUpdate(boardstate: InputBoardState!): Game!
}

type Card {
  Name: String!
  ID: String!
}

type User {
  id: String!
  username: String!
  deck: String!
  boardstate: BoardState!
}

type Deck {
  ID: String!
  Name: String!
  Commander: String!
  Library: [String!]
}

type Game {
  id: String!
  created_at: Time!
  rules: [Rule!]
  turn: Turn!
  players: [BoardState!]!
}

type Turn {
  Player: String
  Phase: String
  Number: Int
}

type Rule {
  name: String!
  value: String!
}

type Emblem {
  name: String!
  value: String!
  player: User!
}

type Counter {
  card: Card!
  name: String!
  value: String!
}

type BoardState {
  User: User!
  GameID: String!
  Commander: [Card!]!
  Library: [Card!]!
  Graveyard: [Card!]!
  Exiled: [Card!]!
  Field: [Card!]!
  Hand: [Card!]!
  Revealed: [Card!]!
  Controlled: [Card!]!
  Counters: [Counter!]
}

input InputCard {
  ID: String
  Name: String!
}

input InputCounter {
  card: InputCard!
  name: String!
  value: String!
}

input InputBoardState {
  UserID: String!
  GameID: String!
  Commander: [String!]!
  Library: [String]!
  Graveyard: [String]!
  Exiled: [String]!
  Field: [String]!
  Hand: [String]!
  Revealed: [String]!
  Controlled: [String]!
  Counters: [InputCounter]
  Emblems: [InputEmblem]
}

input InputSignup {
  Username: String!
  Email: String!
  Password: String!
}

input InputEmblem {
  name: String!
  value: String!
  player: InputUser!
}

input InputUser {
  Deck: InputDeck
  Username: String!
}

input InputGame {
  players: [InputUser!]
}

input InputDeck {
  name: String
  commander: [String!]
  cards: [String!]
}
